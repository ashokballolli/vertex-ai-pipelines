# PIPELINE DEFINITION
# Name: vertexai-inference-pipeline
components:
  comp-call-vertex-ai-endpoint:
    executorLabel: exec-call-vertex-ai-endpoint
    inputDefinitions:
      parameters:
        endpoint_id:
          parameterType: STRING
        input_data:
          parameterType: STRUCT
        location:
          parameterType: STRING
        project_id:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRUCT
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
    inputDefinitions:
      parameters:
        input_data:
          parameterType: STRUCT
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRUCT
  comp-read-input-data:
    executorLabel: exec-read-input-data
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRUCT
  comp-write-output-to-bigquery:
    executorLabel: exec-write-output-to-bigquery
    inputDefinitions:
      parameters:
        endpoint_response:
          parameterType: STRUCT
defaultPipelineRoot: gs://asgb-vertex-ai-pipelines/pipeline_root/intro
deploymentSpec:
  executors:
    exec-call-vertex-ai-endpoint:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - call_vertex_ai_endpoint
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'google-cloud-aiplatform'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef call_vertex_ai_endpoint(project_id: str, location: str, endpoint_id:\
          \ str, input_data: dict) -> dict:\n    import logging\n    # Initialize\
          \ the Vertex AI client\n    # client_options = {\"api_endpoint\": f\"{location}-aiplatform.googleapis.com\"\
          }\n    # client = aiplatform.gapic.PredictionServiceClient(client_options=client_options)\n\
          \n    # # Prepare the input data for prediction\n    # instances = [{\"\
          image_bytes\": input_data}]  # Assuming input data is an image in bytes\
          \ format\n    # input_data = json_format.ParseDict({\"instances\": instances},\
          \ Value())\n\n    # # Create the endpoint resource name\n    # endpoint_name\
          \ = f\"projects/{project_id}/locations/{location}/endpoints/{endpoint_id}\"\
          \n    #\n    # # Make the prediction request\n    # response = client.predict(endpoint=endpoint_name,\
          \ instances=input_data)\n    #\n    import google.cloud.aiplatform as aip\n\
          \    endpoint = aip.Endpoint(\n        endpoint_name=f\"projects/{project_id}/locations/us-central1/endpoints/{endpoint_id}\"\
          \n    )\n    response = endpoint.predict(instances=[input_data])\n\n   \
          \ # Extract and return the predictions\n    logging.info(\"******** predictions\
          \ ********\")\n    logging.info(response)\n    predictions = response.predictions\n\
          \    logging.info(predictions)\n    return predictions[0]\n\n"
        image: python:3.9
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data(input_data: dict) -> dict:\n    import logging\n\
          \    # Your preprocessing code here\n    # assume while pre-processing you\
          \ found out that for image 1001 there is no image, so filtered out\n   \
          \ # get image to image vector for the remaining\n    logging.info(input_data)\n\
          \    image_data_map = {}\n    image_data_map[\"model\"] = \"MNIST\"\n  \
          \  image_data_map[\"mandatory-field\"] = \"dummy\"\n    image_data_map[\"\
          image_id\"] = 1002\n    image_data_map[\"ser-image\"] = [[[0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01568627543747425, 0.0117647061124444,\
          \ 0.0, 0.0, 0.027450980618596077, 0.019607843831181526, 0.0, 0.0117647061124444,\
          \ 0.0, 0.0, 0.0117647061124444, 0.03529411926865578, 0.0235294122248888,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.027450980618596077, 0.0, 0.0, 0.003921568859368563, 0.0, 0.0, 0.0, 0.027450980618596077,\
          \ 0.0117647061124444, 0.003921568859368563, 0.007843137718737125, 0.007843137718737125,\
          \ 0.0, 0.0, 0.0, 0.0235294122248888, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003921568859368563, 0.0235294122248888,\
          \ 0.0235294122248888, 0.0117647061124444, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0117647061124444, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.01568627543747425, 0.0117647061124444, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01568627543747425,\
          \ 0.0, 0.0, 0.03921568766236305, 0.054901961237192154, 0.0117647061124444,\
          \ 0.0, 0.007843137718737125, 0.007843137718737125, 0.007843137718737125,\
          \ 0.003921568859368563, 0.003921568859368563, 0.007843137718737125, 0.0117647061124444,\
          \ 0.003921568859368563, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003921568859368563, 0.0117647061124444,\
          \ 0.0, 0.0, 0.01568627543747425, 0.01568627543747425, 0.0, 0.0, 0.0, 0.0,\
          \ 0.007843137718737125, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.003921568859368563, 0.0117647061124444, 0.0313725508749485,\
          \ 0.04313725605607033, 0.0235294122248888, 0.0, 0.0, 0.007843137718737125,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0117647061124444, 0.0313725508749485, 0.019607843831181526,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.3137255012989044, 0.7921568751335144, 0.7411764860153198, 0.21176470816135406,\
          \ 0.0, 0.01568627543747425, 0.019607843831181526, 0.0, 0.0, 0.04313725605607033,\
          \ 0.15294118225574493, 0.1921568661928177, 0.0941176488995552, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0117647061124444, 0.0, 0.0, 0.027450980618596077,\
          \ 0.0117647061124444, 0.0, 0.1411764770746231, 0.9490196108818054, 0.9686274528503418,\
          \ 0.9921568632125854, 0.47058823704719543, 0.0, 0.0, 0.0, 0.0, 0.01568627543747425,\
          \ 0.5098039507865906, 1.0, 0.8313725590705872, 0.11764705926179886, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0], [0.0313725508749485, 0.0, 0.0, 0.0235294122248888,\
          \ 0.027450980618596077, 0.0, 0.0, 0.0, 0.0117647061124444, 0.7137255072593689,\
          \ 1.0, 0.95686274766922, 1.0, 0.9098039269447327, 0.3176470696926117, 0.0,\
          \ 0.07450980693101883, 0.4274509847164154, 0.8901960849761963, 0.9490196108818054,\
          \ 0.9921568632125854, 0.9529411792755127, 0.0, 0.019607843831181526, 0.0,\
          \ 0.0, 0.0, 0.0], [0.019607843831181526, 0.0, 0.0, 0.003921568859368563,\
          \ 0.0, 0.0, 0.0, 0.01568627543747425, 0.29411765933036804, 0.95686274766922,\
          \ 0.9686274528503418, 0.6352941393852234, 0.5098039507865906, 0.9058823585510254,\
          \ 1.0, 0.95686274766922, 0.9490196108818054, 0.9882352948188782, 0.9882352948188782,\
          \ 1.0, 1.0, 0.4274509847164154, 0.0, 0.003921568859368563, 0.0, 0.0, 0.0,\
          \ 0.0], [0.0, 0.0117647061124444, 0.027450980618596077, 0.0, 0.0, 0.0117647061124444,\
          \ 0.0, 0.0, 0.5960784554481506, 1.0, 0.95686274766922, 0.16078431904315948,\
          \ 0.03529411926865578, 0.6392157077789307, 1.0, 0.9411764740943909, 0.7686274647712708,\
          \ 0.9411764740943909, 1.0, 0.9058823585510254, 0.6392157077789307, 0.07058823853731155,\
          \ 0.0, 0.01568627543747425, 0.0, 0.0, 0.0, 0.0], [0.003921568859368563,\
          \ 0.0, 0.0, 0.0, 0.027450980618596077, 0.027450980618596077, 0.0, 0.062745101749897,\
          \ 0.8470588326454163, 0.929411768913269, 0.6274510025978088, 0.0235294122248888,\
          \ 0.03529411926865578, 0.01568627543747425, 0.0313725508749485, 0.1568627506494522,\
          \ 0.12941177189350128, 0.8235294222831726, 1.0, 0.9372549057006836, 0.18039216101169586,\
          \ 0.0, 0.0117647061124444, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0313725508749485,\
          \ 0.0, 0.0, 0.007843137718737125, 0.007843137718737125, 0.0, 0.03921568766236305,\
          \ 0.40784314274787903, 1.0, 0.9921568632125854, 0.3843137323856354, 0.007843137718737125,\
          \ 0.0, 0.0, 0.01568627543747425, 0.0, 0.5254902243614197, 0.9882352948188782,\
          \ 0.9019607901573181, 0.6666666865348816, 0.0235294122248888, 0.0, 0.03921568766236305,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0], [0.019607843831181526, 0.0, 0.0313725508749485,\
          \ 0.0, 0.0, 0.0, 0.04313725605607033, 0.4470588266849518, 0.772549033164978,\
          \ 0.4117647111415863, 0.0, 0.027450980618596077, 0.0, 0.0, 0.07058823853731155,\
          \ 0.2549019753932953, 0.9176470637321472, 1.0, 0.8470588326454163, 0.16078431904315948,\
          \ 0.0, 0.062745101749897, 0.0, 0.019607843831181526, 0.0, 0.0, 0.0, 0.0],\
          \ [0.0, 0.0, 0.0235294122248888, 0.0, 0.03921568766236305, 0.06666667014360428,\
          \ 0.0, 0.03921568766236305, 0.01568627543747425, 0.0, 0.0, 0.03529411926865578,\
          \ 0.01568627543747425, 0.0, 0.007843137718737125, 0.7176470756530762, 0.95686274766922,\
          \ 1.0, 0.29019609093666077, 0.0, 0.0235294122248888, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0313725508749485,\
          \ 0.0, 0.01568627543747425, 0.0, 0.03921568766236305, 0.3529411852359772,\
          \ 0.9411764740943909, 0.9843137264251709, 0.6784313917160034, 0.04313725605607033,\
          \ 0.0, 0.05098039284348488, 0.0, 0.054901961237192154, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0313725508749485, 0.01568627543747425,\
          \ 0.03529411926865578, 0.007843137718737125, 0.0, 0.21960784494876862, 1.0,\
          \ 1.0, 0.7568627595901489, 0.07450980693101883, 0.0, 0.0313725508749485,\
          \ 0.0, 0.0, 0.0, 0.03529411926865578, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003921568859368563, 0.09019608050584793,\
          \ 0.6705882549285889, 0.9529411792755127, 0.8901960849761963, 0.4117647111415863,\
          \ 0.0, 0.003921568859368563, 0.0784313753247261, 0.0, 0.03921568766236305,\
          \ 0.003921568859368563, 0.01568627543747425, 0.0, 0.0, 0.0, 0.0], [0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0235294122248888, 0.0, 0.08627451211214066,\
          \ 0.04313725605607033, 0.40784314274787903, 1.0, 0.9254902005195618, 0.22745098173618317,\
          \ 0.03529411926865578, 0.04313725605607033, 0.0, 0.0, 0.0, 0.007843137718737125,\
          \ 0.019607843831181526, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0117647061124444, 0.019607843831181526, 0.0, 0.33725491166114807,\
          \ 0.9098039269447327, 0.9843137264251709, 0.6039215922355652, 0.0, 0.0,\
          \ 0.08627451211214066, 0.0, 0.0, 0.062745101749897, 0.0, 0.0, 0.007843137718737125,\
          \ 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0235294122248888,\
          \ 0.07450980693101883, 0.7333333492279053, 1.0, 0.6705882549285889, 0.0,\
          \ 0.09019608050584793, 0.0, 0.01568627543747425, 0.019607843831181526, 0.019607843831181526,\
          \ 0.01568627543747425, 0.0, 0.01568627543747425, 0.0470588244497776, 0.0,\
          \ 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007843137718737125,\
          \ 0.0941176488995552, 0.7960784435272217, 0.9254902005195618, 0.7686274647712708,\
          \ 0.3176470696926117, 0.0, 0.0, 0.003921568859368563, 0.0, 0.04313725605607033,\
          \ 0.0, 0.0, 0.019607843831181526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5098039507865906, 1.0, 1.0, 0.4117647111415863,\
          \ 0.03921568766236305, 0.0, 0.019607843831181526, 0.007843137718737125,\
          \ 0.0, 0.0, 0.007843137718737125, 0.0470588244497776, 0.0, 0.0, 0.019607843831181526,\
          \ 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3294117748737335,\
          \ 1.0, 0.9411764740943909, 0.7254902124404907, 0.14509804546833038, 0.0117647061124444,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\
          \ [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6705882549285889, 1.0, 1.0,\
          \ 0.32549020648002625, 0.0, 0.0, 0.0, 0.019607843831181526, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.8784313797950745, 0.9372549057006836, 0.9686274528503418,\
          \ 0.21176470816135406, 0.05098039284348488, 0.0235294122248888, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666667014360428, 0.04313725605607033,\
          \ 0.0, 0.0, 0.0, 0.007843137718737125, 0.007843137718737125, 0.0, 0.0, 0.0,\
          \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]]\n    # preprocessed_data\
          \ = [image_data_map]\n    preprocessed_data = image_data_map\n    logging.info(\"\
          *********** preprocessed_data ************\")\n    logging.info(preprocessed_data)\n\
          \n    return preprocessed_data\n\n"
        image: python:3.9
    exec-read-input-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - read_input_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef read_input_data() -> dict:\n    import logging\n    # Your preprocessing\
          \ code here\n    input_data = {\"data\": [1001, 1002]}  # Assume you are\
          \ querying BigQuery to get this data\n    logging.info(\"********* input_data\
          \ **********\")\n    logging.info(input_data)\n    return input_data\n\n"
        image: python:3.9
    exec-write-output-to-bigquery:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - write_output_to_bigquery
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef write_output_to_bigquery(endpoint_response: dict):\n    import\
          \ logging\n    # Your code to write output to BigQuery\n    output_data\
          \ = endpoint_response  # Placeholder for writing output to BigQuery\n  \
          \  # Write output data to BigQuery table\n    logging.info(\"***********\
          \ endpoint_response ***********\")\n    logging.info(endpoint_response)\n\
          \n"
        image: python:3.9
pipelineInfo:
  name: vertexai-inference-pipeline
root:
  dag:
    tasks:
      call-vertex-ai-endpoint:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-call-vertex-ai-endpoint
        dependentTasks:
        - preprocess-data
        inputs:
          parameters:
            endpoint_id:
              runtimeValue:
                constant: '2488175022447788032'
            input_data:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: preprocess-data
            location:
              runtimeValue:
                constant: us-central1
            project_id:
              runtimeValue:
                constant: '737482735608'
        taskInfo:
          name: call-vertex-ai-endpoint
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        dependentTasks:
        - read-input-data
        inputs:
          parameters:
            input_data:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: read-input-data
        taskInfo:
          name: preprocess-data
      read-input-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-read-input-data
        taskInfo:
          name: read-input-data
      write-output-to-bigquery:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-write-output-to-bigquery
        dependentTasks:
        - call-vertex-ai-endpoint
        inputs:
          parameters:
            endpoint_response:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: call-vertex-ai-endpoint
        taskInfo:
          name: write-output-to-bigquery
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
